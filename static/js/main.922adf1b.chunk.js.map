{"version":3,"sources":["components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PageNav.tsx","components/ErrorNotification.tsx","api.ts","App.tsx","index.tsx"],"names":["Loader","className","PeopleTable","people","isPeopleLoaded","useState","selectedSlug","setSelectedSlug","map","person","name","sex","born","died","motherName","fatherName","slug","classNames","to","onClick","PageNav","text","isActive","ErrorNotification","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","setPeople","setIsPeopleLoaded","isErrorShown","setIsErrorShown","useEffect","arr","catch","role","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.922adf1b.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport { Loader } from './Loader/Loader';\n\ntype Props = {\n  people: Person[],\n  isPeopleLoaded: boolean,\n};\n\nexport const PeopleTable: FC<Props> = ({ people, isPeopleLoaded }) => {\n  const [selectedSlug, setSelectedSlug] = useState('');\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"\n          table\n          is-striped\n          is-hoverable\n          is-narrow\n          is-fullwidth\n        \"\n      >\n        {!isPeopleLoaded\n          ? <Loader />\n          : (\n            <>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {people.map((person: Person) => {\n                  const {\n                    name, sex, born, died, motherName, fatherName, slug,\n                  } = person;\n\n                  return (\n                    <tr\n                      key={slug}\n                      data-cy=\"person\"\n                      className={classNames(\n                        { 'has-background-warning': selectedSlug === slug },\n                      )}\n                    >\n                      <td>\n                        <Link\n                          to={`/people/${slug}`}\n                          className={classNames(\n                            { 'has-text-danger': sex === 'f' },\n                          )}\n                          onClick={() => setSelectedSlug(slug)}\n                        >\n                          {name}\n                        </Link>\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      <td\n                        className={classNames(\n                          { 'has-text-danger': sex === 'f' },\n                        )}\n                      >\n                        {motherName || '-'}\n                      </td>\n                      <td\n                        className={classNames(\n                          { 'has-text-danger': sex === 'f' },\n                        )}\n                      >\n                        {fatherName || '-'}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </>\n          )}\n      </table>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNav: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => {\n        return classNames(\n          'navbar-item',\n          { 'has-background-grey-lighter': isActive },\n        );\n      }}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","export const ErrorNotification = () => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleTable } from './components/PeopleTable';\nimport { PageNav } from './components/PageNav';\nimport { ErrorNotification } from './components/ErrorNotification';\n\nimport './App.scss';\nimport { Person } from './types/Person';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoaded, setIsPeopleLoaded] = useState(false);\n  const [isErrorShown, setIsErrorShown] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((arr: Person[]) => {\n        setPeople(arr);\n        setIsPeopleLoaded(true);\n      })\n      .catch(() => {\n        setIsErrorShown(true);\n        setIsPeopleLoaded(true);\n      });\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNav to=\"/\" text=\"Home\" />\n            <PageNav to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={(\n                <h1 className=\"title\">Home Page</h1>\n              )}\n            />\n\n            <Route\n              path=\"/people\"\n              element={(\n                <>\n                  <h1 className=\"title\">People Page</h1>\n                  <PeopleTable\n                    people={people}\n                    isPeopleLoaded={isPeopleLoaded}\n                  />\n                </>\n              )}\n            >\n              <Route index />\n              <Route path=\":userId\" />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={(\n                <h1 className=\"title\">Page not found</h1>\n              )}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n\n          {isErrorShown && <ErrorNotification />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}